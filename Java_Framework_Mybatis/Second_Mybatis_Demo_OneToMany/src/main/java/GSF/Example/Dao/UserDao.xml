<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--        namespace=绑定一个Dao/Mapper接口-->
<mapper namespace="GSF.Example.Dao.UserDao">
    <!--    select查询语句，ID对应方法名-->
    <select id="getTeacher"  resultMap="getTeacher">
        select s.id s_id, s.name s_name, t.name t_name, t.id t_id
        from learn_mybatis.student s, learn_mybatis.teacher t
        where s.tid = t.id and t.id=#{id}
    </select>

    <resultMap id="getTeacher" type="GSF.Example.Pojo.Teacher">
        <result property="id" column="t_id"/>
        <result property="name" column="t_name"/>
        <!--复杂的属性我们需要单独处理-->
        <!--对象:association-->
        <!-- 集合：collection -->
        <!--        javaType=""指定属性的类型 集合中的泛型信息，我们使用ofType获取-->
        <collection property="students" javaType="ArrayList" ofType="GSF.Example.Pojo.Student">
            <result property="id" column="s_id"/>
            <result property="name" column="s_name"/>
            <result property="tid" column="t_id"/>
        </collection>
    </resultMap>


    <select id="getTeacher2" resultMap="TeacherStudent2">
        select * from learn_mybatis.teacher where id=#{id}
    </select>
    <resultMap id="TeacherStudent2" type="GSF.Example.Pojo.Teacher">
<!--    两个地方用到id，这个result就得写出来，不然不展示老师的id-->
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="students" column="id" javaType="ArrayList" ofType="GSF.Example.Pojo.Student" select="getStudentByTeacherId"/>
    </resultMap>

    <select id="getStudentByTeacherId" resultType="GSF.Example.Pojo.Student">
        select * from learn_mybatis.student where tid =#{id}
    </select>

</mapper>
